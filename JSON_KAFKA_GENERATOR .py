import json
from random import sample
import os
import zipfile



#list of topics
print('STEP 1:CHOOSE TOPICS')
print('--------------------------')
list= input("Add a Kafka Topic to the List: ")
list = list.split(',')
print(list)
print('Topics:', len(list))
print('\n')



#this function generates the JSON file for the desired topic
def kafka_json(Topics):
 print('STEP 2:GENERATE JSON FILES')
 print('--------------------------')
 for i in Topics:
   with open(f"{i}.json","w") as file:
    file.write('{"version":1,"partitions":[')
    file.write("\n")
    print(f'{i}.json Generated')
#here the range is based on the numbers of partitions
    for x in range(0,20):
      file.write(json.dumps({"topic":i,"partition":x,"replicas":sample(range(1, 4), 3)}))
      file.write(",") #',' after the end of line
      file.write("\n") #'New line' for each partition(range)



#JSON have some restrictions related to commas and brackets
def json_validator(Topics):
  print('\n')
  print('STEP 3:VALIDATE JSON FILES')
  print('--------------------------')
  for i in Topics:
   with open(f"{i}.json", 'rb+') as json:
    json.seek(-3, os.SEEK_END)
  #this is going to remove the last 3 caracters that is 2 blank spaces generated by **json.sumps** randomly
  #and the last comma in the line since its the last partition to be validated
    json.truncate()
#Closing the remaining Brackets
  for i in Topics:
   with open(f"{i}.json","a") as json2:
     json2.write("\n")
     json2.write("]}")
     print(f'File {i} is valid')



#zipPing the json files
def zip(Topics):
 print('\n')
 print('STEP 4:ZIP JSON FILES')
 print('--------------------------')
 for i in Topics:
   with zipfile.ZipFile("Topics.zip", mode="w") as archive: #import zipfile#
    archive.write(f"{i}.json")
    print(f"{i}.json ZIPED WITH SUCCESS")



#removing the remaining json files that will no longer be used
def remove_files(Topics=list):
  print('\n')
  print('STEP 5:REMOVE UNUSED FILES')
  print('--------------------------')
  for i in list:
   if os.path.exists(f"{i}.json"):
    os.remove(f"{i}.json")
    print(f'{i}.json DELETED')
   else:
    print("The file does not exist")



"""EXECUTION BLOCK"""

kafka_json(list)
json_validator(list)
zip(list)
remove_files()


















